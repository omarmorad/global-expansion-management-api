{
  "info": {
    "_postman_id": "12345678-1234-1234-1234-123456789012",
    "name": "Global Expansion Management API",
    "description": "Complete API collection for testing the Global Expansion Management system with SQLite + MongoDB backend",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "🔐 Authentication",
      "item": [
        {
          "name": "Register New Client",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    pm.test('Client registered successfully', function () {",
                  "        pm.response.to.have.status(201);",
                  "    });",
                  "} else if (pm.response.code === 401) {",
                  "    pm.test('Email already exists (expected)', function () {",
                  "        pm.response.to.have.status(401);",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"company_name\": \"Test Company Ltd\",\n  \"email\": \"test@example.com\",\n  \"password\": \"test123456\",\n  \"role\": \"client\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Login Client",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has access token', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('access_token');",
                  "    pm.collectionVariables.set('client_token', jsonData.access_token);",
                  "});",
                  "",
                  "pm.test('User data is correct', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.user).to.have.property('email');",
                  "    pm.expect(jsonData.user.role).to.eql('client');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"client@techcorp.com\",\n  \"password\": \"client123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin login successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has access token', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('access_token');",
                  "    pm.collectionVariables.set('admin_token', jsonData.access_token);",
                  "});",
                  "",
                  "pm.test('User role is admin', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.user.role).to.eql('admin');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@expanders360.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Get Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Profile retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Profile has user data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('userId');",
                  "    pm.expect(jsonData).to.have.property('email');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{client_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            }
          }
        }
      ]
    },
    {
      "name": "📋 Projects",
      "item": [
        {
          "name": "Get All Projects",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Projects retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "    if (jsonData.length > 0) {",
                  "        pm.collectionVariables.set('project_id', jsonData[0].id);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{client_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/projects",
              "host": ["{{base_url}}"],
              "path": ["projects"]
            }
          }
        },
        {
          "name": "Create New Project",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Project created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Project has correct data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData.country).to.eql('France');",
                  "    pm.collectionVariables.set('new_project_id', jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{client_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"country\": \"France\",\n  \"services_needed\": [\"legal\", \"marketing\", \"hr\"],\n  \"budget\": 75000,\n  \"status\": \"active\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/projects",
              "host": ["{{base_url}}"],
              "path": ["projects"]
            }
          }
        },
        {
          "name": "Get Project by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Project retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Project has correct structure', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('country');",
                  "    pm.expect(jsonData).to.have.property('services_needed');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{client_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/projects/{{project_id}}",
              "host": ["{{base_url}}"],
              "path": ["projects", "{{project_id}}"]
            }
          }
        },
        {
          "name": "Update Project",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Project updated successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Project budget updated', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.budget).to.eql('80000');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{client_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"budget\": 80000,\n  \"services_needed\": [\"legal\", \"marketing\", \"hr\", \"operations\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/projects/{{new_project_id}}",
              "host": ["{{base_url}}"],
              "path": ["projects", "{{new_project_id}}"]
            }
          }
        },
        {
          "name": "Rebuild Project Matches",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Matches rebuilt successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Matches array returned', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "    console.log('Generated matches:', jsonData.length);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{client_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/projects/{{new_project_id}}/matches/rebuild",
              "host": ["{{base_url}}"],
              "path": ["projects", "{{new_project_id}}", "matches", "rebuild"]
            }
          }
        },
        {
          "name": "Get Project Matches",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Matches retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Matches have correct structure', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "    if (jsonData.length > 0) {",
                  "        pm.expect(jsonData[0]).to.have.property('score');",
                  "        pm.expect(jsonData[0]).to.have.property('vendor');",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{client_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/projects/{{new_project_id}}/matches",
              "host": ["{{base_url}}"],
              "path": ["projects", "{{new_project_id}}", "matches"]
            }
          }
        }
      ]
    },
    {
      "name": "🏢 Vendors",
      "item": [
        {
          "name": "Get All Vendors",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Vendors retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Vendors array returned', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "    if (jsonData.length > 0) {",
                  "        pm.collectionVariables.set('vendor_id', jsonData[0].id);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{client_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/vendors",
              "host": ["{{base_url}}"],
              "path": ["vendors"]
            }
          }
        },
        {
          "name": "Create Vendor (Admin Only)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Vendor created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Vendor has correct data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData.name).to.eql('Test Expansion Consultants');",
                  "    pm.collectionVariables.set('new_vendor_id', jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Expansion Consultants\",\n  \"countries_supported\": [\"France\", \"Belgium\", \"Netherlands\", \"Luxembourg\"],\n  \"services_offered\": [\"legal\", \"marketing\", \"hr\", \"operations\", \"accounting\"],\n  \"rating\": 4.7,\n  \"response_sla_hours\": 6,\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/vendors",
              "host": ["{{base_url}}"],
              "path": ["vendors"]
            }
          }
        },
        {
          "name": "Get Vendor by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Vendor retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Vendor has correct structure', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('name');",
                  "    pm.expect(jsonData).to.have.property('countries_supported');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{client_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/vendors/{{vendor_id}}",
              "host": ["{{base_url}}"],
              "path": ["vendors", "{{vendor_id}}"]
            }
          }
        },
        {
          "name": "Update Vendor (Admin Only)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Vendor updated successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Vendor rating updated', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.rating).to.eql('4.9');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"rating\": 4.9,\n  \"response_sla_hours\": 4\n}"
            },
            "url": {
              "raw": "{{base_url}}/vendors/{{new_vendor_id}}",
              "host": ["{{base_url}}"],
              "path": ["vendors", "{{new_vendor_id}}"]
            }
          }
        },
        {
          "name": "Get Vendors by Country",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Country vendors retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Vendors support the country', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{client_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/vendors/country/Germany",
              "host": ["{{base_url}}"],
              "path": ["vendors", "country", "Germany"]
            }
          }
        }
      ]
    },
    {
      "name": "📄 Research Documents",
      "item": [
        {
          "name": "Upload Research Document",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Document uploaded successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Document has correct data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('_id');",
                  "    pm.expect(jsonData.title).to.eql('France Market Analysis 2025');",
                  "    pm.collectionVariables.set('document_id', jsonData._id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{client_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"France Market Analysis 2025\",\n  \"content\": \"Comprehensive analysis of the French market including regulatory requirements, business culture, tax implications, and growth opportunities for international companies. Key findings include strong demand for tech services, favorable business environment, and specific requirements for market entry.\",\n  \"tags\": [\"france\", \"market-analysis\", \"regulatory\", \"tech\", \"expansion\"],\n  \"projectId\": {{new_project_id}},\n  \"fileType\": \"pdf\",\n  \"fileSize\": 2048000\n}"
            },
            "url": {
              "raw": "{{base_url}}/research",
              "host": ["{{base_url}}"],
              "path": ["research"]
            }
          }
        },
        {
          "name": "Get All Research Documents",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Documents retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Documents array returned', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{client_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/research",
              "host": ["{{base_url}}"],
              "path": ["research"]
            }
          }
        },
        {
          "name": "Search Documents by Text",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Search completed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Search results returned', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{client_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/research/search?text=france&tags=market-analysis",
              "host": ["{{base_url}}"],
              "path": ["research", "search"],
              "query": [
                {
                  "key": "text",
                  "value": "france"
                },
                {
                  "key": "tags",
                  "value": "market-analysis"
                }
              ]
            }
          }
        },
        {
          "name": "Search Documents by Tags",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Tag search completed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Tagged documents returned', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{client_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/research/search?tags=germany,legal",
              "host": ["{{base_url}}"],
              "path": ["research", "search"],
              "query": [
                {
                  "key": "tags",
                  "value": "germany,legal"
                }
              ]
            }
          }
        },
        {
          "name": "Get Documents by Project",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Project documents retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Project documents returned', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{client_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/research/project/{{new_project_id}}",
              "host": ["{{base_url}}"],
              "path": ["research", "project", "{{new_project_id}}"]
            }
          }
        },
        {
          "name": "Get Document by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Document retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Document has correct structure', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('_id');",
                  "    pm.expect(jsonData).to.have.property('title');",
                  "    pm.expect(jsonData).to.have.property('content');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{client_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/research/{{document_id}}",
              "host": ["{{base_url}}"],
              "path": ["research", "{{document_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "📊 Analytics",
      "item": [
        {
          "name": "Get Top Vendors by Country",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Analytics retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Country analytics returned', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "    if (jsonData.length > 0) {",
                  "        pm.expect(jsonData[0]).to.have.property('country');",
                  "        pm.expect(jsonData[0]).to.have.property('topVendors');",
                  "        pm.expect(jsonData[0]).to.have.property('researchDocumentCount');",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{client_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/analytics/top-vendors",
              "host": ["{{base_url}}"],
              "path": ["analytics", "top-vendors"]
            }
          }
        },
        {
          "name": "Get Matching Stats (Admin)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Matching stats retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Stats have correct structure', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('totalMatches');",
                  "    pm.expect(jsonData).to.have.property('averageScore');",
                  "    pm.expect(jsonData).to.have.property('matchesByCountry');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/analytics/matching-stats",
              "host": ["{{base_url}}"],
              "path": ["analytics", "matching-stats"]
            }
          }
        },
        {
          "name": "Get Project Stats (Admin)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Project stats retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Stats have correct structure', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('totalProjects');",
                  "    pm.expect(jsonData).to.have.property('activeProjects');",
                  "    pm.expect(jsonData).to.have.property('averageBudget');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/analytics/project-stats",
              "host": ["{{base_url}}"],
              "path": ["analytics", "project-stats"]
            }
          }
        },
        {
          "name": "Get Vendor Stats (Admin)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Vendor stats retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Stats have correct structure', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('totalVendors');",
                  "    pm.expect(jsonData).to.have.property('activeVendors');",
                  "    pm.expect(jsonData).to.have.property('averageRating');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/analytics/vendor-stats",
              "host": ["{{base_url}}"],
              "path": ["analytics", "vendor-stats"]
            }
          }
        }
      ]
    },
    {
      "name": "🔧 System",
      "item": [
        {
          "name": "API Health Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('API is healthy', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Health status is ok', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('ok');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "API Info",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('API info retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('API info has correct structure', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('name');",
                  "    pm.expect(jsonData).to.have.property('version');",
                  "    pm.expect(jsonData).to.have.property('endpoints');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "client_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "admin_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "project_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "new_project_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "vendor_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "new_vendor_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "document_id",
      "value": "",
      "type": "string"
    }
  ]
}
